# import Book from "./generated/prisma.graphql"

type Query {
  me: User
  users: [User!]!
  user(id: ID!): User
  books: [Book!]!
  book(isbn: String!): Book
  bookshelvesByUser: Bookshelves!
  bookshelf(id: ID!): Bookshelf
}

type Mutation {
  addBooksToShelf(books: BooksInput!, bookshelfId: ID!): Bookshelf!
  createAccount(firstName: String!,
                lastName: String!,
                username: String!,
                phoneNumber: String!,
                password: String!): CreateAccountPayload!
  confirmAccount(confirmationCode: String!): LoginPayload!
  deleteUser(id: ID!): User
  login(userOrPhone: String!, password: String!): LoginPayload!
  removeBookFromShelf(bookshelfId: ID!, isbn: String!): Book!
}

type Bookshelves {
  shelves: [Bookshelf!]!
}

type CreateAccountPayload {
  token: String!
}

type LoginPayload {
  user: User
  token: String
}

# The `User` type is a reduced version ("mask") of the `User` type from the data model (and database schema).
# It does not expose the `createdAt`, `updatedAt` and `password` fields.
type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  isConfirmed: Boolean!
}

input BookInput {
  author: String!
  isbn: String!
  title: String!
  description: String!
}

input BooksInput {
  books: [BookInput!]
}
